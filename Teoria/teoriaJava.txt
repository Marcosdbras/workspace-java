+ Classes abstratas
  + São usadas quando não faz sentido instanciar uma classe
    Não permite instanciar a classe em objeto
    mantendo a consistência da classe
    porém, pode ser feito referencia a classe abstrada

+ Método Abstratos
  São métodos que temos certeza que não serão implentadas, portanto,
  os métodos implementados sempre serão das classes que herdarão da classe principal

  No diagrama UML a notação estará sempre na fonte itálica

+ Interface
  Tem assinaturas de métodos dentro dela, via de regra, o comportamento dos métodos não são definidos nela e sim nos métodos, salvo exceções.
  Tenho sempre assinaturas de metódos, não posso ter atributos, porém, posso ter constantes
  Pode ser utilizado o polimorfismo
  Quando a classe tiver de ser alterado a classe fica protegida

+ Exceções
Devem direta ou indiretamente da classe Exception

Existem 2 categorias de exceções 
Checked Exception

throws Exception > vai na assinatura do método
throw new Exception() > Lança um obejeto de exceção


Uncheched Exceptions, também chamadas de runtime exception, Hera de RuntimeException, Geralmente sem problemas que devem ser corrigidos no código, não precisa declarar throws na assinatura do método, não é necessário o tratamento da exceção


Como tratar exceções que foram lançadas
try...catch

MultCatch











  
